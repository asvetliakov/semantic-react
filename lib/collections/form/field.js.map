{"version":3,"sources":["../../../src/components/collections/form/field.jsx"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;AAEA,SAAS,UAAT,CAAoB,KAApB,EAA2B;AACvB,QAAI,UAAU;AACV,kBAAU,MAAM,KAAN,KAAgB,UAAhB;AACV,eAAO,MAAM,KAAN,KAAgB,OAAhB;;AAEP,kBAAU,MAAM,QAAN;AACV,gBAAQ,MAAM,MAAN;AACR,iBAAS,MAAM,OAAN;KANT,CADmB;;AAUvB,QAAI,MAAM,KAAN,EAAa;AACb,YAAI,MAAM,KAAN,GAAc,CAAd,IAAoB,MAAM,KAAN,IAAe,EAAf,EAAmB;AACvC,oBAAQ,mBAAQ,MAAM,KAAN,CAAR,GAAuB,OAAvB,CAAR,GAA0C,IAA1C,CADuC;SAA3C;KADJ;;AAMA,YAAQ,KAAR,GAAgB,MAAM,cAAN,CAhBO;;AAkBvB,WAAO,OAAP,CAlBuB;CAA3B;;;AAuBA,SAAS,WAAT,CAAqB,KAArB,EAA4B;AACxB,WACI;;UAAO,KAAK,QAAQ,OAAR,EAAZ;QAA8B,KAA9B;KADJ,CADwB;CAA5B;;AAMA,IAAI,QAAQ,SAAR,KAAQ,CAAC,KAAD,EAAW;;QAEb,WAA2D,MAA3D,SAFa;QAEH,YAAiD,MAAjD,UAFG;QAEQ,YAAsC,MAAtC,UAFR;QAEmB,QAA2B,MAA3B,MAFnB;QAE0B,QAAoB,MAApB,MAF1B;;QAEoC,iCAAU;;AAF9C;;AAInB,UAAM,SAAN,GAAkB,0BAAW,SAAX,EAAsB,WAAW,KAAX,CAAtB,CAAlB,CAJmB;;AAMnB,WAAO,gBAAM,aAAN,CACH,SADG,EAEH,KAFG,EAGH,CACI,8BAAc,QAAd,EAAwB,MAAM,UAAN,CAAiB,QAAjB,CAAxB,IAAsD,8BAAc,QAAd,EAAwB,MAAM,UAAN,CAAiB,cAAjB,CAA9E,IAAkH,CAAC,KAAD,IAAU,SAAS,EAAT,GAAe,IAA3I,GAAkJ,YAAY,MAAM,KAAN,CAA9J,EACA,QAFJ,CAHG,CAAP,CANmB;CAAX;;AAmCZ,MAAM,YAAN,GAAqB;AACjB,eAAW,KAAX;AACA,oBAAgB,IAAhB;CAFJ;;AAKA,MAAM,UAAN,GAAmB;AACf,gCADe;AAEf,4CAFe;CAAnB;;kBAKe","file":"field.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Numbers, hasFirstChild } from '../../utilities';\nimport Checkbox from './../../modules/checkbox/checkbox';\nimport CheckboxFields from './../../modules/checkbox/checkboxfields';\n\nfunction getClasses(props) {\n    let classes = {\n        disabled: props.state === 'disabled',\n        error: props.state === 'error',\n\n        required: props.required,\n        inline: props.inline,\n        grouped: props.grouped\n    };\n\n    if (props.width) {\n        if (props.width > 0  && props.width <= 16) {\n            classes[Numbers[props.width] + ' wide'] = true;\n        }\n    }\n\n    classes.field = props.defaultClasses;\n\n    return classes;\n}\n\n\n// check if child is checkbox first?\nfunction renderLabel(label) {\n    return (\n        <label key={label + 'Label'}>{label}</label>\n    );\n}\n\nlet Field = (props) => {\n    /* eslint-disable no-use-before-define */\n    let { children, className, component, label, width, ...other } = props;\n    /* eslint-enable no-use-before-define */\n    other.className = classNames(className, getClasses(props));\n\n    return React.createElement(\n        component,\n        other,\n        [\n            hasFirstChild(children, Field.Components.Checkbox) || hasFirstChild(children, Field.Components.CheckboxFields) || !label || label == ''  ? null : renderLabel(props.label),\n            children\n        ]\n    );\n};\n\nField.propTypes = {\n    children: React.PropTypes.node,\n    className: React.PropTypes.any,\n    component: React.PropTypes.oneOfType([\n        React.PropTypes.element,\n        React.PropTypes.string\n    ]),\n    defaultClasses: React.PropTypes.bool,\n    grouped: React.PropTypes.bool,\n    inline: React.PropTypes.bool,\n    label: React.PropTypes.string,\n    required: React.PropTypes.bool,\n    state: React.PropTypes.oneOf([\n        'disabled',\n        'error'\n    ]),\n    width: React.PropTypes.number\n}\n\nField.defaultProps = {\n    component: 'div',\n    defaultClasses: true\n}\n\nField.Components = {\n    Checkbox: Checkbox,\n    CheckboxFields: CheckboxFields\n};\n\nexport default Field;\n\n"]}