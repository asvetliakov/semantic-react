{"version":3,"sources":["../../../src/components/elements/divider/divider.jsx"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;AAEA,SAAS,UAAT,CAAoB,KAApB,EAA2B;AACvB,WAAO;;AAEH,YAAI,MAAM,cAAN;;;AAGJ,gBAAQ,MAAM,MAAN;AACR,oBAAY,MAAM,OAAN,KAAkB,YAAlB;AACZ,kBAAU,MAAM,OAAN,KAAkB,UAAlB;;;AAGV,kBAAU,MAAM,QAAN;AACV,gBAAQ,MAAM,OAAN,KAAkB,QAAlB;AACR,gBAAQ,MAAM,MAAN;AACR,kBAAU,MAAM,QAAN;AACV,iBAAS,MAAM,OAAN,KAAkB,QAAlB;;;AAGT,iBAAS,MAAM,cAAN;KAjBb,CADuB;CAA3B;;;;;AAyBA,IAAI,UAAU,SAAV,OAAU,CAAC,KAAD,EAAW;QACb,UAC4C,MAD5C,QADa;QACJ,WACmC,MADnC,SADI;QACM,WACyB,MADzB,SADN;QACgB,YACe,MADf,UADhB;QAC2B,iBACI,MADJ,eAD3B;QAEjB,SAAgD,MAAhD,OAFiB;QAET,SAAwC,MAAxC,OAFS;QAED,WAAgC,MAAhC,SAFC;QAES,UAAsB,MAAtB,QAFT;;QAEqB,iCAAU,sHAF/B;;AAIrB,QAAI,YAAY,SAAZ,CAJiB;AAKrB,UAAM,SAAN,GAAkB,0BAAW,MAAM,SAAN,EAAiB,WAAW,KAAX,CAA5B,CAAlB,CALqB;AAMrB,WACI;AAAC,iBAAD;QAAe,KAAf;QAAuB,QAAvB;KADJ,CANqB;CAAX;;AAuCd,QAAQ,YAAR,gBACO,uBAAa,YAAb,CADP;;kBAIe","file":"divider.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport DefaultProps from '../../defaultProps';\n\nfunction getClasses(props) {\n    return {\n        // default\n        ui: props.defaultClasses,\n\n        // types\n        header: props.header,\n        horizontal: props.aligned === 'horizontal',\n        vertical: props.aligned === 'vertical',\n\n        // variations\n        clearing: props.clearing,\n        fitted: props.spacing === 'fitted',\n        hidden: props.hidden,\n        inverted: props.inverted,\n        section: props.spacing === 'padded',\n\n        // component\n        divider: props.defaultClasses\n    };\n}\n\n/**\n * Divider\n */\nlet Divider = (props) => {\n    const { aligned, children, clearing, component, defaultClasses,\n        header, hidden, inverted, spacing, ...other } = props;\n    \n    let Component = component;\n    other.className = classNames(other.className, getClasses(props));\n    return (\n        <Component {...other}>{children}</Component>\n    );\n};\n\nDivider.propTypes = {\n    ...DefaultProps.propTypes,\n    /**\n     * Content segment vertically or horizontally\n     */\n    aligned: React.PropTypes.oneOf(['horizontal', 'vertical']),\n    /**\n     * A divider can clear the contents above it\n     */\n    clearing: React.PropTypes.bool,\n    /**\n     * Formats divider as header-like (taking less space and don't capitalize content)\n     */\n    header: React.PropTypes.bool,\n    /**\n     * A hidden divider divides content without creating a dividing line\n     */\n    hidden: React.PropTypes.bool,\n    /**\n     * A divider can have its colors inverted\n     */\n    inverted: React.PropTypes.bool,\n    /**\n     * Divider spacing\n     */\n    spacing: React.PropTypes.oneOf(['fitted', 'padded'])\n};\n\nDivider.defaultProps = {\n    ...DefaultProps.defaultProps\n};\n\nexport default Divider;\n\n"]}