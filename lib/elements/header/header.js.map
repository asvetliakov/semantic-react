{"version":3,"sources":["../../../src/components/elements/header/header.jsx"],"names":[],"mappings":"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","file":"header.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport elementType from 'react-prop-types/lib/elementType';\nimport { validateClassProps, hasChild } from '../../utilities';\nimport DefaultProps from '../../defaultProps';\nimport Icon from '../icon/icon';\nimport Image from '../image/image';\n\nlet validProps = {\n    aligned: ['right', 'left', 'justified', 'center'],\n    attached: ['bottom', 'top'],\n    floated: ['right', 'left']\n};\n\nexport default class Header extends React.Component {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        /**\n         * A header can have its text aligned to a side\n         */\n        aligned: React.PropTypes.oneOf(['right', 'left', 'justified', 'center']),\n        /**\n         * A header can be attached to other content, like a segment\n         */\n        attached: React.PropTypes.oneOfType([\n            React.PropTypes.oneOf(['bottom', 'top']),\n            React.PropTypes.bool\n        ]),\n        /**\n         * A header can be formatted with different colors\n         */\n        color: React.PropTypes.string,\n        /**\n         * A header can show that it is inactive\n         */\n        disabled: React.PropTypes.bool,\n        /**\n         * Header may be used as divider\n         */\n        divider: React.PropTypes.bool,\n        /**\n         * dividing: can be formatted to divide itself from the content below it\n         * block: can be formatted to appear inside a content block\n         */\n        emphasis: React.PropTypes.oneOf(['dividing', 'block']),\n        /**\n         * A header can sit to the left or right of other content\n         */\n        floated: React.PropTypes.oneOf(['right', 'left']),\n        /**\n         * Icon name for header. This will turn header into icon header (ui icon header)\n         */\n        icon: React.PropTypes.string,\n        /**\n         * Icon component\n         */\n        iconComponent: elementType,\n        /**\n         * A header can have its colors inverted for contrast\n         */\n        inverted: React.PropTypes.bool,\n        /**\n         * May be used as menu item\n         */\n        item: React.PropTypes.bool,\n        /**\n         * May have various sizes\n         */\n        size: React.PropTypes.string\n    };\n\n    // we don't want the ui in these circumstances\n    static contextTypes = {\n        isListChild: React.PropTypes.bool,\n        isHeaderChild: React.PropTypes.bool,\n        isAccordionChild: React.PropTypes.bool,\n        isMenuChild: React.PropTypes.bool,\n        isCardChild: React.PropTypes.bool,\n        isModalChild: React.PropTypes.bool\n    };\n\n    // any header/sub header under a header is a sub header\n    static childContextTypes = {\n        isHeaderChild: React.PropTypes.bool\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps,\n        attached: false,\n        item: true // handles\n    };\n\n    /* eslint-disable */\n    static Components = {\n        Icon: Icon,\n        Image: Image\n    }\n    /* eslint-enable */\n\n    getChildContext() {\n        return {\n            isHeaderChild: true\n        };\n    }\n\n    render() {\n\n        /* eslint-disable no-use-before-define */\n        let { \n            aligned, attached, children, className, color, component,\n            defaultClasses, disabled, divider, emphasis, floated,\n            horizontal, icon, iconComponent, inverted, item, size, ...other \n        } = this.props;\n        /* eslint-enable no-use-before-define */\n\n        // add class names\n        other.className = classNames(other.className, this.getClasses());\n        const IconComponent = iconComponent || Header.Components.Icon;\n        let Component = component;\n        if (Component === 'div' && this.props.onClick) {\n            Component = 'a';\n        }\n        \n        return (\n            <Component {...other}>\n                {icon &&\n                <IconComponent name={icon}/>\n                }\n                {children}\n            </Component>\n        );\n\n    }\n    \n    shouldHaveUiClass() {\n        if (!this.props.defaultClasses) {\n            return false;\n        }\n        if (this.context.isListChild || this.context.isHeaderChild || \n            this.context.isMenuChild || this.context.isCardChild\n        ) {\n            return false;\n        }\n        \n        // Modal header shouldn't have ui class only for simple modals, i.e. icon header or header with image/icon \n        // content should HAS ui class\n        if (this.context.isModalChild) {\n            // Icon header\n            if (this.props.icon) {\n                return true;\n            }\n            // Header with icon / image content should has UI class\n            if (hasChild(this.props.children, Header.Components.Icon) || hasChild(this.props.children, Header.Components.Image)) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    }\n\n    getClasses() {\n        let classes = {\n            // default\n            ui: this.shouldHaveUiClass(),\n\n            // types\n            icon: this.props.icon,\n            item: this.context.isMenuChild && this.props.item,\n\n            // states\n            disabled: this.props.disabled,\n\n            // variations\n            aligned: this.props.aligned && this.props.aligned !== 'justified',\n            attached: this.props.attached,\n            block: this.props.emphasis == 'block',\n            dividing: this.props.emphasis == 'dividing',\n            divider: this.props.divider, // makes a header that is also a divider\n            floated: this.props.floated,\n            horizontal: this.props.horizontal,\n            inverted: this.props.inverted,\n\n            sub: this.context.isHeaderChild && this.props.defaultClasses,\n            // component\n            header: this.props.defaultClasses\n        };\n\n        classes[this.props.color] = !!this.props.color;\n        classes[this.props.size] = !!this.props.size;\n\n        classes = validateClassProps(classes, this.props, validProps);\n        if (this.props.aligned === 'justified') {\n            classes['justified aligned'] = false;\n            classes['justified'] = true;\n        }\n        return classes;\n    }\n}\n"]}