{"version":3,"sources":["../../../src/components/elements/icon/icon.jsx"],"names":[],"mappings":";;;;;;;;QAUgB;;AAVhB;;;;AACA;;AACA;;;;AACA;;;;;;;;AAEA,IAAI,aAAa;AACb,WAAS,CAAC,cAAD,EAAiB,YAAjB,CAAT;AACA,WAAS,CAAC,WAAD,EAAc,kBAAd,CAAT;CAFA;;AAKG,SAAS,UAAT,CAAoB,KAApB,EAA2B;AAC9B,MAAI,UAAU;;;AAGV,cAAU,MAAM,QAAN;AACV,cAAU,MAAM,QAAN;AACV,YAAQ,MAAM,MAAN;AACR,cAAU,MAAM,KAAN,KAAgB,UAAhB;AACV,YAAQ,MAAM,MAAN;AACR,UAAM,MAAM,IAAN,IAAc,MAAM,OAAN;AACpB,cAAU,MAAM,QAAN;AACV,aAAS,MAAM,KAAN,KAAgB,SAAhB;;;AAGT,UAAM,MAAM,cAAN;GAbN;;;;;AAD0B,SAoB9B,CAAQ,MAAM,IAAN,CAAR,GAAsB,CAAC,CAAC,MAAM,IAAN,CApBM;AAqB9B,UAAQ,MAAM,KAAN,CAAR,GAAuB,CAAC,CAAC,MAAM,KAAN,CArBK;AAsB9B,UAAQ,MAAM,IAAN,CAAR,GAAsB,CAAC,CAAC,MAAM,IAAN,CAtBM;AAuB9B,UAAQ,MAAM,QAAN,CAAR,GAA0B,CAAC,CAAC,MAAM,QAAN,CAvBE;;AAyB9B,SAAO,mCAAmB,OAAnB,EAA4B,KAA5B,EAAmC,UAAnC,CAAP,CAzB8B;CAA3B;;;;;AA+BP,IAAI,OAAO,SAAP,IAAO,CAAC,KAAD,EAAW;MAEd,YAEA,MAFA,UAFc;MAEH,iBAEX,MAFW,eAFG;MAEa,WAE3B,MAF2B,SAFb;MAEuB,WAErC,MAFqC,SAFvB;MAEiC,WAE/C,MAF+C,SAFjC;MAE2C,QAEzD,MAFyD,MAF3C;MAEkD,SAEhE,MAFgE,OAFlD;MAE0D,QAExE,MAFwE,MAF1D;MAEiE,SAE/E,MAF+E,OAFjE;MAEyE,UAEvF,MAFuF,QAFzE;MAGd,WACA,MADA,SAHc;MAGJ,OACV,MADU,KAHI;MAGE,OAChB,MADgB,KAHF;MAGQ,OACtB,MADsB,KAHR;MAGc,UAC5B,MAD4B,QAHd;;MAG0B,iCACxC,4KAJc;;AAKlB,MAAI,YAAY,SAAZ,CALc;AAMlB,QAAM,SAAN,GAAkB,0BAAW,MAAM,SAAN,EAAiB,WAAW,KAAX,CAA5B,CAAlB,CANkB;AAOlB,SAAQ;AAAC,aAAD;IAAe,KAAf;IAAuB,QAAvB;GAAR,CAPkB;CAAX;;AA8DX,KAAK,YAAL,gBACO,uBAAa,YAAb;AACH,aAAW,GAAX;EAFJ;;kBAKe","file":"icon.js","sourcesContent":["import React from 'react';\nimport { validateClassProps } from '../../utilities';\nimport classNames from 'classnames';\nimport DefaultProps from '../../defaultProps';\n\nlet validProps = {\n    flipped: ['horizontally', 'vertically'],\n    rotated: ['clockwise', 'counterclockwise']\n};\n\nexport function getClasses(props) {\n    let classes = {\n        // default\n        // variations\n        bordered: props.bordered,\n        circular: props.circular,\n        corner: props.corner,\n        disabled: props.state === 'disabled',\n        fitted: props.fitted,\n        link: props.link || props.onClick,\n        inverted: props.inverted,\n        loading: props.state === 'loading',\n\n        // component\n        icon: props.defaultClasses\n    };\n\n    // handle all string or mixed string/bool props\n\n    // classes[this.props.aligned] = !!this.props.aligned;\n    classes[props.size] = !!props.size;\n    classes[props.color] = !!props.color;\n    classes[props.name] = !!props.name;\n    classes[props.pointing] = !!props.pointing;\n\n    return validateClassProps(classes, props, validProps);\n}\n\n/**\n * Icon\n */\nlet Icon = (props) => {\n    const {\n        component, defaultClasses, children, bordered, circular, color, corner, state, fitted, flipped,\n        inverted, link, name, size, rotated, ...other\n    } = props;\n    let Component = component;\n    other.className = classNames(other.className, getClasses(props));\n    return (<Component {...other}>{children}</Component>);\n};\n\nIcon.propTypes = {\n    ...DefaultProps.propTypes,\n    /**\n     * An icon can be formatted to appear bordered\n     */\n    bordered: React.PropTypes.bool,\n    /**\n     * An icon can be formatted to appear circular\n     */\n    circular: React.PropTypes.bool,\n    /**\n     * An icon can be formatted with different colors\n     */\n    color: React.PropTypes.string,\n    /**\n     * Render as corner icon if used in <Icons/>\n     */\n    corner: React.PropTypes.bool,\n    /**\n     * Icon could be disabled or used as simple loader\n     */\n    state: React.PropTypes.oneOf(['disabled', 'loading']),\n    /**\n     * An icon can be fitted, without any space to the left or right of it.\n     */\n    fitted: React.PropTypes.bool,\n    /**\n     * An icon can be flipped\n     */\n    flipped: React.PropTypes.oneOf(['horizontally', 'vertically']),\n    /**\n     * An icon can have its colors inverted for contrast\n     */\n    inverted: React.PropTypes.bool,\n    /**\n     * Could be formatted as link\n     */\n    link: React.PropTypes.bool,\n    /**\n     * Icon name\n     */\n    name: React.PropTypes.string,\n    /**\n     * Icon size\n     */\n    size: React.PropTypes.string,\n    /**\n     * An icon can be rotated\n     */\n    rotated: React.PropTypes.oneOf(['clockwise', 'counterclockwise'])\n};\n\nIcon.defaultProps = {\n    ...DefaultProps.defaultProps,\n    component: 'i'\n};\n\nexport default Icon;\n"]}