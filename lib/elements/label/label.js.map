{"version":3,"sources":["../../../src/components/elements/label/label.jsx"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;;;;;AAEA,IAAI,aAAa;AACb,YAAU,CAAC,KAAD,EAAQ,QAAR,EAAkB,WAAlB,EAA+B,UAA/B,EAA2C,aAA3C,EAA0D,cAA1D,CAAV;AACA,UAAQ,CAAC,MAAD,EAAS,OAAT,CAAR;AACA,YAAU,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,EAA0B,OAA1B,CAAV;AACA,UAAQ,CAAC,OAAD,CAAR;CAJA;;AAOJ,SAAS,UAAT,CAAoB,KAApB,EAA2B,OAA3B,EAAoC;AAChC,MAAI,UAAU;;AAEV,QAAI,MAAM,cAAN,IAAwB,CAAC,QAAQ,YAAR,IAAwB,CAAC,QAAQ,eAAR;;;AAGtD,cAAU,MAAM,QAAN;AACV,YAAQ,MAAM,MAAN;AACR,cAAU,MAAM,QAAN;AACV,WAAO,MAAM,KAAN;AACP,cAAU,MAAM,QAAN;AACV,YAAQ,MAAM,MAAN;AACR,SAAK,MAAM,GAAN;AACL,WAAO,MAAM,KAAN;AACP,gBAAY,MAAM,UAAN;;;AAGZ,cAAU,MAAM,QAAN;AACV,WAAO,MAAM,KAAN;;;AAGP,WAAO,MAAM,cAAN;GApBP;;;AAD4B,SAyBhC,CAAQ,MAAM,KAAN,CAAR,GAAuB,CAAC,CAAC,MAAM,KAAN,CAzBO;AA0BhC,UAAQ,MAAM,IAAN,CAAR,GAAsB,CAAC,CAAC,MAAM,IAAN,CA1BQ;;AA4BhC,SAAO,mCAAmB,OAAnB,EAA4B,KAA5B,EAAmC,UAAnC,CAAP,CA5BgC;CAApC;;AA+BA,SAAS,YAAT,CAAsB,KAAtB,EAA6B;AACzB,SAAO,CAAE,MAAM,IAAN,IAAc,MAAM,OAAN,CAAf,IAAiC,MAAM,SAAN,KAAoB,KAApB,GAA6B,GAA/D,GAAqE,MAAM,SAAN,CADnD;CAA7B;;;;;AAOA,IAAI,QAAQ,SAAR,KAAQ,CAAC,KAAD,EAAQ,OAAR,EAAoB;MAExB,YAEA,MAFA,UAFwB;MAEb,WAEX,MAFW,SAFa;MAEH,iBAErB,MAFqB,eAFG;MAEa,WAErC,MAFqC,SAFb;MAEuB,QAE/C,MAF+C,MAFvB;MAE8B,WAEtD,MAFsD,SAF9B;MAEwC,QAEhE,MAFgE,MAFxC;MAE+C,SAEvE,MAFuE,OAF/C;MAEuD,QAE/E,MAF+E,MAFvD;MAE8D,WAEtF,MAFsF,SAF9D;MAGxB,aACA,MADA,WAHwB;MAGZ,QACZ,MADY,MAHY;MAGL,OACnB,MADmB,KAHK;MAGC,WACzB,MADyB,SAHD;MAGW,SACnC,MADmC,OAHX;MAGmB,OAC3C,MAD2C,KAHnB;MAGyB,MACjD,MADiD,IAHzB;;MAGiC,iCACzD,iMAJwB;;AAK5B,MAAI,YAAY,aAAa,KAAb,CAAZ,CALwB;;AAO5B,QAAM,SAAN,GAAkB,0BAAW,MAAM,SAAN,EAAiB,WAAW,KAAX,EAAkB,OAAlB,CAA5B,CAAlB,CAP4B;AAQ5B,SACI;AAAC,aAAD;IAAe,KAAf;IAEK,SAAS,uCAAK,KAAK,KAAL,EAAL,CAAT;IACA,QAHL;GADJ,CAR4B;CAApB;;AAwFZ,MAAM,YAAN,gBACO,uBAAa,YAAb,CADP;;AAIA,MAAM,YAAN,GAAqB;AACjB,gBAAc,gBAAM,SAAN,CAAgB,IAAhB;AACd,mBAAiB,gBAAM,SAAN,CAAgB,IAAhB;CAFrB;;kBAKe","file":"label.js","sourcesContent":["import React from 'react';\nimport { validateClassProps } from '../../utilities';\nimport classNames from 'classnames';\nimport DefaultProps from '../../defaultProps';\n\nlet validProps = {\n    attached: ['top', 'bottom', 'top right', 'top left', 'bottom left', 'bottom right'],\n    corner: ['left', 'right'],\n    pointing: ['top', 'bottom', 'left', 'right'],\n    ribbon: ['right']\n};\n\nfunction getClasses(props, context) {\n    let classes = {\n        // default\n        ui: props.defaultClasses && !context.isCardsChild && !context.isProgressChild,\n\n        // types\n        attached: props.attached,\n        corner: props.corner,\n        floating: props.floating,\n        image: props.image,\n        pointing: props.pointing,\n        ribbon: props.ribbon,\n        tag: props.tag,\n        basic: props.basic,\n        horizontal: props.horizontal,\n\n        // variations\n        circular: props.circular,\n        empty: props.empty,\n\n        // component\n        label: props.defaultClasses\n    };\n\n    // handle mixed string/bool props\n    classes[props.color] = !!props.color;\n    classes[props.size] = !!props.size;\n\n    return validateClassProps(classes, props, validProps);\n}\n\nfunction getComponent(props) {\n    return ((props.link || props.onClick) && props.component === 'div') ? 'a' : props.component;\n}\n\n/**\n * Label\n */\nlet Label = (props, context) => {\n    const { \n        component, children, defaultClasses, attached, basic, circular, color, corner, empty, floating,\n        horizontal, image, link, pointing, ribbon, size, tag, ...other\n    } = props;\n    let Component = getComponent(props);\n    \n    other.className = classNames(other.className, getClasses(props, context));\n    return (\n        <Component {...other}>\n            {/* Add img tag if specified image */}\n            {image && <img src={image}/>}\n            {children}\n        </Component>\n    );\n};\n\nLabel.propTypes = {\n    ...DefaultProps.propTypes,\n    /**\n     * A label can attach to a content segment\n     */\n    attached: React.PropTypes.oneOf(['top', 'bottom', 'top right', 'top left', 'bottom left', 'bottom right']),\n    /**\n     * A label can reduce its complexity\n     */\n    basic: React.PropTypes.bool,\n    /**\n     * A label can be circular\n     */\n    circular: React.PropTypes.bool,\n    /**\n     * A label can have different colors\n     */\n    color: React.PropTypes.string,\n    /**\n     * A label can position itself in the corner of an element\n     */\n    corner: React.PropTypes.oneOfType([\n        React.PropTypes.oneOf(['left', 'right']),\n        React.PropTypes.bool\n    ]),\n    /**\n     * Empty label\n     */\n    empty: React.PropTypes.bool,\n    /**\n     * A label can float above another element\n     */\n    floating: React.PropTypes.bool,\n    /**\n     * A horizontal label is formatted to label content along-side it horizontally\n     */\n    horizontal: React.PropTypes.bool,\n    \n    /**\n     * Add image to the label\n     */\n    image: React.PropTypes.string,\n    /**\n     * Format label as link (uses <a> tag)\n     */\n    link: React.PropTypes.bool,\n    /**\n     * A label can point to content next to it\n     */\n    pointing: React.PropTypes.oneOfType([\n        React.PropTypes.oneOf(['top', 'bottom', 'left', 'right']),\n        React.PropTypes.bool\n    ]),\n    /**\n     * A label can appear as a ribbon attaching itself to an element.\n     */\n    ribbon: React.PropTypes.oneOfType([\n        React.PropTypes.oneOf(['right']),\n        React.PropTypes.bool\n    ]),\n\n    /**\n     * A label can be small or large\n     */\n    size: React.PropTypes.string,\n    /**\n     * A label can appear as a tag\n     */\n    tag: React.PropTypes.bool\n};\n\nLabel.defaultProps = {\n    ...DefaultProps.defaultProps\n};\n\nLabel.contextTypes = {\n    isCardsChild: React.PropTypes.bool,\n    isProgressChild: React.PropTypes.bool\n};\n\nexport default Label;\n\n"]}