{"version":3,"sources":["../../../src/components/elements/simple/content.jsx"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;;;;;;;;;AAEA,IAAI,aAAa;AACb,aAAS,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,CAAT;AACA,aAAS,CAAC,OAAD,EAAU,MAAV,CAAT;CAFA;;IAKiB;;;;;;;;;;;4CAiCG;AAChB,mBAAQ;;kBAAK,WAAU,QAAV,EAAL;gBAAyB,KAAK,KAAL,CAAW,QAAX;aAAjC,CADgB;;;;iCAIX;AACL,gBAAI,WAAW,KAAK,OAAL,CAAa,aAAb,IAA8B,CAAC,KAAK,OAAL,CAAa,YAAb,GAA4B,KAAK,iBAAL,EAA3D,GAAsF,KAAK,KAAL,CAAW,QAAX;;;AADhG,yBAKuB,KAAK,KAAL,CALvB;gBAIC,yBAJD;gBAIU,6BAJV;gBAIqB,uCAJrB;gBAIqC,qBAJrC;gBAI4C,yBAJ5C;gBAIqD,uBAJrD;gBAI6D,mBAJ7D;gBAKC,yBALD;;gBAKa;;;AALb,iBAQL,CAAM,SAAN,GAAkB,0BAAW,KAAK,KAAL,CAAW,SAAX,EAAsB,KAAK,UAAL,EAAjC,CAAlB,CARK;;AAUL,mBAAO,gBAAM,aAAN,CACH,KAAK,KAAL,CAAW,SAAX,EACA,KAFG,EAGH,QAHG,CAAP,CAVK;;;;qCAiBI;AACT,gBAAI,UAAU;;AAEV,yBAAS,KAAK,KAAL,CAAW,cAAX;;;AAGT,wBAAQ,KAAK,KAAL,CAAW,MAAX;AACR,yBAAS,KAAK,KAAL,CAAW,OAAX;AACT,uBAAO,KAAK,KAAL,CAAW,KAAX;AACP,yBAAS,KAAK,KAAL,CAAW,OAAX;AACT,wBAAQ,KAAK,KAAL,CAAW,MAAX;AACR,sBAAM,KAAK,KAAL,CAAW,IAAX;AACN,yBAAS,KAAK,KAAL,CAAW,OAAX;AACT,uBAAO,KAAK,KAAL,CAAW,KAAX;aAZP,CADK;;AAgBT,mBAAO,mCAAmB,OAAnB,EAA4B,KAAK,KAAL,EAAY,UAAxC,CAAP,CAhBS;;;;WAtDI;EAAgB,gBAAM,SAAN,UAsB1B,eAAe;AAClB,mBAAe,gBAAM,SAAN,CAAgB,IAAhB;AACf,kBAAc,gBAAM,SAAN,CAAgB,IAAhB;UAGX,eAAe;AAClB,eAAW,KAAX;AACA,oBAAgB,IAAhB;AACA,aAAS,KAAT;;kBA9Ba","file":"content.js","sourcesContent":["import React from 'react';\nimport { validateClassProps } from '../../utilities';\nimport classNames from 'classnames';\n\nlet validProps = {\n    aligned: ['top', 'middle', 'bottom'],\n    floated: ['right', 'left']\n};\n\nexport default class Content extends React.Component {\n    static propTypes = {\n        active: React.PropTypes.bool,\n        aligned: React.PropTypes.string,\n        children: React.PropTypes.node,\n        className: React.PropTypes.node,\n        component: React.PropTypes.oneOfType([\n            React.PropTypes.element,\n            React.PropTypes.string\n        ]),\n        defaultClasses: React.PropTypes.bool,\n        extra: React.PropTypes.bool,\n        floated: React.PropTypes.oneOfType([\n            React.PropTypes.string,\n            React.PropTypes.bool\n        ]),\n        hidden: React.PropTypes.bool,\n        meta: React.PropTypes.bool,\n        visible: React.PropTypes.bool,\n        image: React.PropTypes.bool\n    };\n\n    static contextTypes = {\n        isDimmerChild: React.PropTypes.bool,\n        isModalChild: React.PropTypes.bool\n    };\n\n    static defaultProps = {\n        component: 'div',\n        defaultClasses: true,\n        floated: false\n    };\n\n    renderDimmerChild() {\n        return (<div className=\"center\">{this.props.children}</div>);\n    }\n\n    render() {\n        let children = this.context.isDimmerChild && !this.context.isModalChild ? this.renderDimmerChild() : this.props.children;\n\n        /* eslint-disable no-use-before-define */\n        let { aligned, component, defaultClasses, extra, floated, hidden, meta,\n              visible, ...other } = this.props;\n        /* eslint-enable no-use-before-define */\n\n        other.className = classNames(this.props.className, this.getClasses());\n\n        return React.createElement(\n            this.props.component,\n            other,\n            children\n        );\n    }\n\n    getClasses() {\n        let classes = {\n            // default\n            content: this.props.defaultClasses,\n\n            // variations\n            active: this.props.active,\n            aligned: this.props.aligned,\n            extra: this.props.extra,\n            floated: this.props.floated,\n            hidden: this.props.hidden,\n            meta: this.props.meta,\n            visible: this.props.visible,\n            image: this.props.image\n        };\n\n        return validateClassProps(classes, this.props, validProps);\n    }\n}\n"]}