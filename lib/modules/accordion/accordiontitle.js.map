{"version":3,"sources":["../../../src/components/modules/accordion/accordiontitle.jsx"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;AAKA,IAAI,iBAAiB,SAAjB,cAAiB,CAAC,KAAD,EAAW;QAExB,YACA,MADA,UAFwB;QAEb,WACX,MADW,SAFa;QAEH,iBACrB,MADqB,eAFG;QAEa,SACrC,MADqC,OAFb;QAEqB,OAC7C,MAD6C,KAFrB;QAE2B,gBACnD,MADmD,cAF3B;QAE0C,QAClE,MADkE,MAF1C;QAEiD,eACzE,MADyE,aAFjD;QAE+D,UACvF,MADuF,QAF/D;;QAE2E,iCACnG,2HAHwB;;AAI5B,QAAM,YAAY,SAAZ,CAJsB;AAK5B,QAAM,gBAAgB,iBAAiB,eAAe,UAAf,CAA0B,IAA1B,CALX;;AAO5B,UAAM,SAAN,GAAkB,0BAAW,MAAM,SAAN,EAAiB;AAC1C,eAAO,cAAP;AACA,gBAAQ,MAAR;KAFc,CAAlB;;AAP4B,WAaxB;AAAC,iBAAD;qBAAe,SAAO,SAAS,OAAT,EAAkB,OAAO,YAAP,GAAxC;QACI,8BAAC,aAAD,IAAe,MAAM,IAAN,EAAf,CADJ;QAEK,QAFL;KADJ,CAZ4B;CAAX;;AAkDrB,eAAe,YAAf,gBACO,uBAAa,YAAb;AACH,YAAQ,KAAR;AACA,UAAM,UAAN;EAHJ;;AAMA,eAAe,UAAf,GAA4B;AACxB,wBADwB;CAA5B;;kBAIe","file":"accordiontitle.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport DefaultProps from '../../defaultProps';\nimport elementType from 'react-prop-types/lib/elementType';\nimport Icon from './../../elements/icon/icon';\n\n/**\n * Title element for Accordion\n */\nlet AccordionTitle = (props) => {\n    const {\n        component, children, defaultClasses, active, icon, iconComponent, index, initialStyle, onClick, ...other\n    } = props;\n    const Component = component;\n    const IconComponent = iconComponent || AccordionTitle.Components.Icon;\n    \n    other.className = classNames(other.className, {\n        title: defaultClasses,\n        active: active\n    });\n    // Set style to initial style, just style will contain animating values, we don't want animate the title\n    return (\n        <Component {...other} onClick={onClick} style={initialStyle}>\n            <IconComponent name={icon}/>\n            {children}\n        </Component>\n    );\n};\n\nAccordionTitle.propTypes = {\n    ...DefaultProps.propTypes,\n    /**\n     * True for active (visible) accordion section. This is being set by Accordion itself\n     */\n    active: React.PropTypes.bool,\n    /**\n     * Icon name\n     */\n    icon: React.PropTypes.string,\n    /**\n     * Allows to override icon component\n     */\n    iconComponent: elementType,\n    /**\n     * Initial style. Shouldn't be set directly, it's being passed by Accordion component,\n     * since we don't want to animate titles\n     */\n    initialStyle: React.PropTypes.object,\n    /**\n     * Accordion index. Used by Accordion component to control which content should be hidden/displayed\n     */\n    index: React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.string]).isRequired,\n    /**\n     * Click handler. Being set by Accordion\n     */\n    onClick: React.PropTypes.func\n    \n};\n\nAccordionTitle.defaultProps = {\n    ...DefaultProps.defaultProps,\n    active: false,\n    icon: 'dropdown'\n};\n\nAccordionTitle.Components = {\n    Icon: Icon\n};\n\nexport default AccordionTitle;\n"]}