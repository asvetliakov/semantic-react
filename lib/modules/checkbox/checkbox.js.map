{"version":3,"sources":["../../../src/components/modules/checkbox/checkbox.jsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqB;;;;;;;;;;;;;;0MAwCjB,UAAU,UAAC,KAAD,EAAW;AACjB,gBAAI,MAAK,KAAL,CAAW,QAAX,IAAuB,MAAK,KAAL,CAAW,QAAX,EAAqB,OAAhD;;AAEA,kBAAK,KAAL,CAAW,OAAX,CAAmB,KAAnB,EAHiB;SAAX;;;iBAxCO;;yCA8CA;;yBAGoC,KAAK,KAAL,CAHpC;gBAEP,2BAFO;gBAEG,uCAFH;gBAEmB,6BAFnB;gBAE8B,yBAF9B;gBAEuC,mBAFvC;gBAGP,6BAHO;gBAGI,2BAHJ;gBAGc,yBAHd;;gBAG0B;;;AAH1B,gBAMT,gBAAgB,CAChB,oDACS;AACL,sBAAK,UAAL;AACA,qBAAI,OAAJ;AACA,2BAAU,QAAV;AACA;AACA,yBAAS,OAAT,GANJ,CADgB,EAQhB;;kBAAO,KAAI,OAAJ,EAAP;gBACK,QADL;aARgB,CAAhB,CANS;;AAmBb,mBAAO,aAAP,CAnBa;;;;iCAsBR;;0BAEuE,KAAK,KAAL,CAFvE;gBAEC,8BAFD;gBAEY,wCAFZ;gBAE4B,0BAF5B;gBAEqC,oBAFrC;gBAE2C,0BAF3C;gBAEoD,oBAFpD;;gBAE6D;;;AAF7D,iBAKL,CAAM,SAAN,GAAkB,0BAAW,KAAK,KAAL,CAAW,SAAX,EAAsB,KAAK,UAAL,EAAjC,CAAlB,CALK;AAML,kBAAM,OAAN,GAAgB,KAAK,OAAL,CANX;;AAQL,mBAAO,gBAAM,aAAN,CACH,KAAK,KAAL,CAAW,SAAX,EACA,KAFG,EAGH,KAAK,cAAL,EAHG,CAAP,CARK;;;;qCAeI;AACT,mBAAO;;AAEH,oBAAI,KAAK,KAAL,CAAW,cAAX;AACJ,0BAAU,KAAK,KAAL,CAAW,cAAX;;;;;AAKV,uBAAO,KAAK,KAAL,CAAW,IAAX,IAAmB,OAAnB;AACP,wBAAQ,KAAK,KAAL,CAAW,IAAX,IAAmB,QAAnB;AACR,wBAAQ,KAAK,KAAL,CAAW,IAAX,IAAmB,QAAnB;;;AAGR,wBAAQ,KAAK,KAAL,CAAW,MAAX;;;AAGR,6BAAa,KAAK,KAAL,CAAW,QAAX;AACb,yBAAS,KAAK,KAAL,CAAW,OAAX;AACT,0BAAU,KAAK,KAAL,CAAW,QAAX;AACV,+BAAe,KAAK,KAAL,CAAW,aAAX;aAnBnB,CADS;;;;WAnFI;4BAkCV,4BACA,uBAAa,YAAb;AACH,UAAM,SAAN;AACA,aAAS,mBAAM,EAAN;;kBArCI","file":"checkbox.js","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport DefaultProps  from '../../defaultProps';\n\nexport default class Checkbox extends Component {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n\n        /**\n         * State checked\n         */\n        checked: React.PropTypes.bool,\n        /**\n         * Does not allow user interaction\n         */\n        disabled: React.PropTypes.bool,\n        /**\n         * It does disabled, but does not allow user interaction\n         */\n        readOnly: React.PropTypes.bool,\n        /**\n         * Callback handler to click checkbox\n         */\n        onClick: React.PropTypes.func,\n        /**\n        * Attr name\n         */\n        name: React.PropTypes.string,\n        /**\n        * Checkbox - appearance\n         */\n        type: React.PropTypes.oneOf(['default', 'radio', 'toggle', 'slider']),\n        /**\n        * A fitted checkbox does not leave padding for a label\n         */\n        fitted: React.PropTypes.bool\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps,\n        type: 'default',\n        onClick: () => { }\n    };\n\n    onClick = (event) => {\n        if (this.props.disabled || this.props.readOnly) return;\n\n        this.props.onClick(event);\n    };\n\n    renderChildren() {\n        /* eslint-disable no-use-before-define */\n        let { children, defaultClasses, className, onClick, type,\n              component, readOnly, checked, ...other } = this.props;\n        /* eslint-enable no-use-before-define */\n\n        let childElements = [\n            <input\n                { ...other }\n                type=\"checkbox\"\n                key=\"input\"\n                className=\"hidden\"\n                readOnly\n                checked={checked} />,\n            <label key=\"label\">\n                {children}\n            </label>\n        ];\n\n        return childElements;\n    }\n\n    render() {\n        /* eslint-disable no-use-before-define */\n        let { component, defaultClasses, checked, type, onClick, name, ...other } = this.props;\n        /* eslint-enable no-use-before-define */\n\n        other.className = classNames(this.props.className, this.getClasses());\n        other.onClick = this.onClick;\n\n        return React.createElement(\n            this.props.component,\n            other,\n            this.renderChildren()\n        );\n    }\n\n    getClasses() {\n        return {\n            // default\n            ui: this.props.defaultClasses,\n            checkbox: this.props.defaultClasses,\n\n            // positioning\n\n            // types\n            radio: this.props.type == 'radio',\n            slider: this.props.type == 'slider',\n            toggle: this.props.type == 'toggle',\n\n             // variations\n            fitted: this.props.fitted,\n\n            // state\n            'read-only': this.props.readOnly,\n            checked: this.props.checked,\n            disabled: this.props.disabled,\n            indeterminate: this.props.indeterminate\n        };\n    }\n}\n"]}