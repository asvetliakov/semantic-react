{"version":3,"sources":["../../../src/components/modules/dropdown/option.jsx"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;AAKA,IAAI,SAAS,SAAT,MAAS,CAAC,KAAD,EAAW;;QAEZ,WAA8B,MAA9B,SAFY;QAEF,QAAoB,MAApB,MAFE;;QAEQ,iCAAU;;AAFlB;;AAIpB,QAAI,MAAM,MAAN,EAAc;AACd,cAAM,SAAN,GAAkB,0BAAW,MAAM,SAAN,EAAiB,EAAE,UAAU,IAAV,EAA9B,CAAlB,CADc;KAAlB;AAGA,WACI;AAAC,eAAO,WAAW,QAAnB;;AACI,uBAAW,KAAX;WACI,MAFR;QAIK,QAJL;KADJ,CAPoB;CAAX;;AA4Bb,OAAO,YAAP,gBACO,mBAAS,YAAT,CADP;;AAIA,OAAO,UAAP,GAAoB;AAChB,gCADgB;CAApB;;kBAIe","file":"option.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport MenuItem from './../../views/menu/menuitem';\n\n/**\n * Select option. This should be used in <Select>\n */\nlet Option = (props) => {\n    /* eslint-disable no-use-before-define */\n    const { children, value, ...other } = props;\n    /* eslint-enable no-use-before-define */\n    if (other.active) {\n        other.className = classNames(other.className, { selected: true });\n    }\n    return (\n        <Option.Components.MenuItem \n            menuValue={value}\n            {...other} \n        >\n            {children}\n        </Option.Components.MenuItem>\n    )\n};\n\nOption.propTypes = {\n    ...MenuItem.propTypes,\n    /**\n     * Option value\n     */\n    value: React.PropTypes.oneOfType([\n        React.PropTypes.number,\n        React.PropTypes.string\n    ]).isRequired\n};\n\nOption.defaultProps = {\n    ...MenuItem.defaultProps\n};\n\nOption.Components = {\n    MenuItem: MenuItem\n};\n\nexport default Option;"]}