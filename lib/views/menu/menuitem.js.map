{"version":3,"sources":["../../../src/components/views/menu/menuitem.jsx"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;AAMA,IAAI,WAAW,SAAX,QAAW,OAA4C;QAAzC,qBAAyC;QAAjC,mBAAiC;QAA1B,2BAA0B;;QAAZ,yEAAY;;AACvD,QAAI,UAAU;AACV,gBAAQ,MAAR;KADA,CADmD;AAIvD,QAAI,KAAJ,EAAW;AACP,gBAAQ,KAAR,IAAiB,CAAC,CAAC,KAAD,CADX;KAAX;AAGA,UAAM,SAAN,GAAkB,0BAAW,MAAM,SAAN,EAAiB,OAA5B,CAAlB,CAPuD;;AASvD,WAAQ,8BAAC,SAAS,WAAW,IAArB,eAA8B;AAC9B,sBAAY,SAAZ;AACA,qBAFA,CAAR,CATuD;CAA5C;;AAmCf,SAAS,YAAT,gBACO,eAAK,YAAL,CADP;;AAIA,SAAS,UAAT,GAAsB;AAClB,wBADkB;CAAtB;;kBAIe","file":"menuitem.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport Item from '../item/item';\n\n\n/**\n * Menu/Dropdown item\n */\nlet MenuItem = ({ active, color, menuValue, ...other }) => {\n    let classes = {\n        active: active\n    };\n    if (color) {\n        classes[color] = !!color;\n    }\n    other.className = classNames(other.className, classes);\n    \n    return (<MenuItem.Components.Item {...other} \n            data-value={menuValue}\n            link />\n    );\n    \n};\n\nMenuItem.propTypes = {\n    ...Item.propTypes,\n    /**\n     * Is item active\n     */\n    active: React.PropTypes.bool,\n    /**\n     * Item color\n     */\n    color: React.PropTypes.string,\n    /**\n     * Item value (used in controlled menu)\n     */\n    menuValue: React.PropTypes.oneOfType([\n        React.PropTypes.number,\n        React.PropTypes.string\n    ])\n};\n\nMenuItem.defaultProps = {\n    ...Item.defaultProps\n};\n\nMenuItem.Components = {\n    Item: Item\n};\n\nexport default MenuItem;\n"]}